{"version":3,"sources":["components/Quote.js","components/Author.js","components/TweetQuote.js","components/NewQuote.js","components/Buttons.js","App.js","index.js"],"names":["Quote","props","S","QuoteBox","id","color","animationTime","Text","fade","quote","styled","div","fadeOutIn","keyframes","Author","AuthorBox","author","p","css","TweetQuote","href","target","rel","TweetButton","bgColor","icon","faTwitterSquare","NewQuote","NewQuoteButton","disabled","onClick","handleClick","i","Buttons","disableNewQuote","button","App","state","quotes","quoteText","quoteAuthor","mainColor","setState","getColor","setTimeout","getRandomQuote","handleFade","randomQuote","Math","floor","random","length","colors","randomColor","document","body","style","margin","axios","get","then","res","data","catch","error","console","log","Background","this","onAnimationEnd","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d6dbd2dc.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { css, keyframes } from 'styled-components'\r\n\r\nexport default function Quote(props) {\r\n  return (\r\n    <S.QuoteBox\r\n      id=\"text\"\r\n      color={props.color}\r\n      animationTime={props.animationTime}\r\n    >\r\n      <S.Text\r\n        fade={props.fade}\r\n        animationTime={props.animationTime}\r\n      >\r\n        {props.quote}\r\n      </S.Text>\r\n    </S.QuoteBox>\r\n  )\r\n}\r\n\r\nconst S = {}\r\n\r\nS.QuoteBox = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: ${props => props.color};\r\n    font-size: 30px;\r\n    padding: 40px 50px 0px;\r\n    flex-basis: 75%;\r\n    border-radius: 5px 5px 0 0;\r\n    background-color: white;\r\n    transition: color ${props => props.animationTime}ms;\r\n`\r\n\r\nconst fadeOutIn = keyframes`\r\n    0% {opacity: 1;}\r\n    50% {opacity: 0;}\r\n    100% {opacity: 1;}\r\n`\r\n\r\nS.Text = styled.p`\r\n    margin: 0;\r\n    ${props => props.fade ? css`animation: ${fadeOutIn} ${props => props.animationTime}ms linear forwards` : ''};\r\n`","import React from 'react'\r\nimport styled, { css, keyframes } from 'styled-components'\r\n\r\nexport default function Author (props) {\r\n  return (\r\n    <S.AuthorBox \r\n      id=\"author\"\r\n      color={props.color}\r\n      animationTime={props.animationTime}\r\n      >\r\n      <S.Text\r\n        fade={props.fade}\r\n        animationTime={props.animationTime}\r\n        >\r\n        - {props.author}\r\n      </S.Text>\r\n    </S.AuthorBox>\r\n  )\r\n}\r\n\r\nconst S = {}\r\n  \r\nS.AuthorBox= styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  color: ${props => props.color};\r\n  font-size: 20px;\r\n  padding: 20px 50px 30px;\r\n  flex-basis: 12.5%;\r\n  background-color: white;\r\n  transition: color ${props => props.animationTime}ms;\r\n`\r\n\r\nconst fadeOutIn = keyframes`\r\n    0% {opacity: 1;}\r\n    50% {opacity: 0;}\r\n    100% {opacity: 1;}\r\n`\r\n\r\nS.Text = styled.p`\r\n    margin: 0;\r\n    ${props => props.fade ? css`animation: ${fadeOutIn} ${props => props.animationTime}ms linear forwards` : ''};\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons'\r\n\r\nexport default function TweetQuote (props) { \r\n  return (\r\n    <a \r\n      id=\"tweet-quote\"\r\n      href={`https://twitter.com/intent/tweet?text=\"${props.quote}\" -${props.author}`} \r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      >\r\n      <S.TweetButton\r\n        bgColor={props.bgColor}\r\n        animationTime={props.animationTime}\r\n        >\r\n        <FontAwesomeIcon icon={faTwitterSquare} />\r\n      </S.TweetButton>\r\n    </a>\r\n  )\r\n}\r\n\r\nconst S = {}\r\n\r\nS.TweetButton = styled.i`\r\n  color: ${props => props.bgColor};\r\n  height: 35px;\r\n  font-size: 35px;\r\n  background-color: white;\r\n  transition: color ${props => props.animationTime}ms;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default function NewQuote (props) {\r\n  return (\r\n    <S.NewQuoteButton\r\n      id=\"new-quote\"\r\n      disabled={props.disabled}\r\n      onClick={props.handleClick}\r\n      bgColor={props.bgColor}\r\n      animationTime={props.animationTime}\r\n      >\r\n      New Quote\r\n    </S.NewQuoteButton>\r\n  )\r\n}\r\n\r\nconst S = {}\r\n\r\nS.NewQuoteButton = styled.button`\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  height: 35px;\r\n  background-color: ${props => props.bgColor};\r\n  transition: background-color ${props => props.animationTime}ms;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport TweetQuote from './TweetQuote'\r\nimport NewQuote from './NewQuote'\r\n\r\nexport default function Buttons (props) {\r\n  return (\r\n    <S.Buttons id=\"buttons\">\r\n      <TweetQuote \r\n        quote={props.quote}\r\n        author={props.author}\r\n        bgColor={props.color}\r\n        animationTime={props.animationTime}\r\n      />\r\n      <NewQuote \r\n        handleClick={props.handleClick}\r\n        disabled={props.disableNewQuote}\r\n        bgColor={props.color}\r\n        animationTime={props.animationTime}\r\n      />\r\n    </S.Buttons>\r\n  )\r\n}\r\n\r\nconst S = {}\r\n\r\nS.Buttons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 50px 30px;\r\n  flex-basis: 12.5%;\r\n  border-radius: 0 0 5px 5px;\r\n  background-color: white;\r\n`","import React from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nimport Quote from './components/Quote'\nimport Author from './components/Author'\nimport Buttons from './components/Buttons'\n\nexport default class App extends React.Component { \n  state = {\n    quotes: \"\",\n    quoteText: \"\",\n    quoteAuthor: \"\",\n    mainColor: \"white\",\n    fade: false,\n    disableNewQuote: false,\n    animationTime: 1500,\n  }\n  \n  componentDidMount() {\n    document.body.style.margin = 0\n    axios.get('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n    .then(res => {\n      this.setState({\n        quotes: res.data.quotes,\n      });\n    })\n    .catch(error => {\n      console.log(`Error: ${error}`)\n    })\n    .then(() => {\n      this.getRandomQuote()\n      this.getColor()\n    })\n    \n  };\n\n  handleClick = () => {\n    this.setState({\n      fade: true,\n      disableNewQuote: true,\n    })\n    this.getColor();\n    setTimeout(() => {\n      this.getRandomQuote(); \n    }, this.state.animationTime / 2)\n    setTimeout(() => {\n      this.setState({\n        fade: false,\n        disableNewQuote: false,\n      })\n    }, this.state.animationTime)\n  }\n\n  handleFade = () => {\n    this.setState({\n      fade: !this.state.fade,\n      disableNewQuote: !this.state.disableNewQuote,\n    })\n  }\n\n  getRandomQuote = () => {\n    let randomQuote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\n    this.setState({ \n      quoteText: randomQuote.quote,\n      quoteAuthor: randomQuote.author,\n    })\n  }\n  \n  getColor = () => {\n    let colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"]\n    let randomColor = colors[Math.floor(Math.random() * colors.length)]\n    this.setState({\n      mainColor: randomColor\n    })\n  }\n  \n  render() {\n    return (\n      \n      <S.Background \n        bgColor={this.state.mainColor}\n        fade={this.state.fade}\n        animationTime={this.state.animationTime}\n        >\n        <S.QuoteBox \n          id=\"quote-box\"\n          bgColor={this.state.mainColor}\n          >\n          <Quote \n            quote={this.state.quoteText} \n            color={this.state.mainColor}\n            fade={this.state.fade}\n            animationTime={this.state.animationTime}\n            onAnimationEnd={() => this.setState({\n              fade: false,\n              disableNewQuote: false,\n            })}\n          />\n          <Author \n            author={this.state.quoteAuthor}\n            color={this.state.mainColor}\n            fade={this.state.fade}\n            animationTime={this.state.animationTime}\n          />\n          <Buttons \n            quote={this.state.quoteText}\n            author={this.state.quoteAuthor}\n            handleClick={this.handleClick}\n            disableNewQuote={this.state.disableNewQuote}\n            color={this.state.mainColor}\n            fade={this.state.fade}\n            animationTime={this.state.animationTime}\n          />\n        </S.QuoteBox>\n      </S.Background>\n    )\n  }\n}\n\nconst S = {}\n\nS.Background = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: ${props => props.bgColor};\n  transition: background-color ${props => props.animationTime}ms;\n`\n\nS.QuoteBox = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  height: auto;\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}